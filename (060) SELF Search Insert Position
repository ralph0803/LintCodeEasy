public class Solution {
    /** 
     * param A : an integer sorted array
     * param target :  an integer to be inserted
     * return : an integer
     */
    public int searchInsert(int[] A, int target) {
        // write your code here
        if (A == null || A.length == 0) {
            return 0;
        }
        int idx = -1;
        int start = 0, end = A.length - 1;
        
        while (start + 1 < end) {
            int mid = start + (end - start) / 2;
            if (A[mid] == target) {
                end = mid;
            } else if (A[mid] < target) {
                start = mid;
            } else {
                end = mid;
            }
        }
        
        // found
        if (A[start] == target) {
            idx = start;
        } else if (A[end] == target) {
            idx = end;
        } else if (A[start] < target && target < A[end]) {
            idx = end;
        }
        
        // not found, need to consider two boundaries
        if(idx == -1) {
            if (A[0] > target) {
                idx = 0;
            }
            if (A[A.length-1] < target) {
                idx = A.length;
            }
        }
        return idx;
    }
}

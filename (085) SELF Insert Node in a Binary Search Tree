/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        // write your code here
        if (node == null) {
            return root;
        }
        if (root == null) {
            return node;
        }
        
        TreeNode tmp = root;
        
        while (tmp.left != null || tmp.right != null) {
            if (tmp.left == null) {
                if (node.val <= tmp.val) {
                    tmp.left = node;
                    return root;
                } else {
                    tmp = tmp.right;
                }
            } else if (tmp.right == null) {
                if (node.val > tmp.val) {
                    tmp.right = node;
                    return root;
                } else {
                    tmp = tmp.left;
                }
            } else {
                if (node.val <= tmp.val) {
                    tmp = tmp.left;
                } else {
                    tmp = tmp.right;
                }
            }
        }
        
        if (tmp.left == null && tmp.right == null ) {
            if (node.val <= tmp.val) {
                tmp.left = node;
            } else {
                tmp.right = node;
            }
        }
        return root;
    }
}

public class Solution {
    /**
     * @param obstacleGrid: A list of lists of integers
     * @return: An integer
     */
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        // write your code here
        if (obstacleGrid == null) {
            return 0;
        }
        
        int height = obstacleGrid.length;
        int width = obstacleGrid[0].length;
        
        if (obstacleGrid[height-1][width-1] == 1) {
            return 0;
        }

        for(int i = 0; i < height; i++) {
            for(int j = 0; j < width; j++) {
                if (i == 0 && j == 0) {
                    if (obstacleGrid[i][j] > 0) {
                        continue;
                    } else {
                        obstacleGrid[i][j] = -1; 
                    }
                } else if (i > 0 && j < 1) {
                    if (obstacleGrid[i][j] == 1) {
                        continue;
                    } else if (obstacleGrid[i-1][j] == 1) {
                        obstacleGrid[i][j] = 0;
                    } else {
                        obstacleGrid[i][j] = obstacleGrid[i-1][j];
                    }
                } else if (j > 0 && i < 1) {
                    if (obstacleGrid[i][j] == 1) {
                        continue;
                    } else if (obstacleGrid[i][j-1] == 1) {
                        obstacleGrid[i][j] = 0;
                    } else {
                        obstacleGrid[i][j] = obstacleGrid[i][j-1];
                    }
                } else {
                    if (obstacleGrid[i][j] == 1) {
                        continue;
                    } else if (obstacleGrid[i-1][j] == 1) {
                        obstacleGrid[i][j] = obstacleGrid[i][j-1];
                    } else if (obstacleGrid[i][j-1] == 1) {
                        obstacleGrid[i][j] = obstacleGrid[i-1][j];
                    } else {
                        obstacleGrid[i][j] = obstacleGrid[i-1][j] + obstacleGrid[i][j-1];
                    }
                }
            }
        }
        return Math.abs(obstacleGrid[height-1][width-1]);
    }
}

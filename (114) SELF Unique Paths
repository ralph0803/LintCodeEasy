public class Solution {
    /**
     * @param n, m: positive integer (1 <= n ,m <= 100)
     * @return an integer
     */
    public int uniquePaths(int m, int n) {
        // write your code here
        if (m == 0 || n == 0) {
            return 0;
        }
        int[][] grid = new int[m][n];
        
        // add values from its left and upper neighbors
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (i < 1 && j < 1) {
                    grid[i][j] = 1;
                } else if (i > 0 && j < 1) {
                    grid[i][j] = grid[i-1][j];
                } else if (i < 1 && j > 0) {
                    grid[i][j] = grid[i][j-1];
                } else {
                    grid[i][j] = grid[i-1][j] + grid[i][j-1];
                }
            }
        }
        return grid[m-1][n-1];
    }
}
